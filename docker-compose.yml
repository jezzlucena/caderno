services:
  # Caderno Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: caderno-frontend
    ports:
      - "5174:80"
    environment:
      # Caderno Hub API URL
      - VITE_HUB_API_URL=${VITE_HUB_API_URL}
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.ts:/app/vite.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.app.json:/app/tsconfig.app.json
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./package.json:/app/package.json
    networks:
      - caderno-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5174"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Caderno Server Service (for scheduled exports)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: caderno-server
    ports:
      - "3002:3002"
    environment:
      # Server Configuration
      - SERVER_PORT=${SERVER_PORT}
      - NODE_ENV=${NODE_ENV}
      
      # Database
      - DATABASE_PATH=${DATABASE_PATH}
      
      # Authentication
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY_SALT=${API_KEY_SALT}
      
      # Email Configuration (Optional)
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      
      # SMS Configuration (Optional)
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      
      # CORS
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FILE=${LOG_FILE}
    volumes:
      - ./server/data:/app/data
      - ./server/logs:/app/logs
      - ./server/src:/app/src
    networks:
      - caderno-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  caderno-network:
    driver: bridge

volumes:
  caderno-data:
    driver: local
